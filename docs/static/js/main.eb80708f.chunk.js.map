{"version":3,"sources":["components/Subject.js","components/ListLink.js","components/TOC.js","components/ContentRead.js","components/ContentCreate.js","components/ContentUpdate.js","main.js","App.js","serviceWorker.js","index.js"],"names":["Subject","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","href","onClick","ev","preventDefault","props","onWelcome","bind","title","sub","Component","ListLink","style","active","color","backgroundColor","textDecoration","id","label","TOC","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","selected","data","map","el","ListLink_ListLink","onSelect","getList","ContentRead","desc","ContentCreate","description","event","setState","defineProperty","target","name","onSubmit","submitHandler","type","placeholder","onChange","formChangeHandler","ContentUpdate","App","contents_max_id","mode","subject","welcome","selected_contents_id","contents","filter","content","ContentRead_ContentRead","getContent","ContentCreate_ContentCreate","formData","assign","push","ContentUpdate_ContentUpdate","newContents","className","Subject_Subject","TOC_TOC","main_CRUD","CRUD","clickHandler","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oMACaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEI,OAAQC,EAAAC,EAAAC,cAAA,cACNF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,IAAIC,QAAS,SAASC,GAChCA,EAAGC,iBACHf,KAAKgB,MAAMC,aACXC,KAAKlB,OAAQA,KAAKgB,MAAMG,QACzBnB,KAAKgB,MAAMI,SAPlBxB,EAAA,CAA6ByB,aCAhBC,EAAb,SAAAzB,GAAA,SAAAyB,IAAA,OAAAxB,OAAAC,EAAA,EAAAD,CAAAE,KAAAsB,GAAAxB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwB,GAAAnB,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAwB,EAAAzB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAwB,EAAA,EAAAf,IAAA,SAAAC,MAAA,WAEI,IAAIe,EAAQvB,KAAKgB,MAAMQ,OAAS,CAAEC,MAAO,MAAOC,gBAAiB,OAAQC,eAAgB,QAAW,GACpG,OAAQlB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAMZ,KAAKgB,MAAMJ,KAAMW,MAAOA,EAAOV,QAAS,SAAUe,EAAId,GACzEA,EAAGC,iBACHf,KAAKgB,MAAMH,QAAQe,IACnBV,KAAKlB,KAAMA,KAAKgB,MAAMY,KAAM5B,KAAKgB,MAAMa,YAN7CP,EAAA,CAA8BD,aCCjBS,EAAb,SAAAjC,GAAA,SAAAiC,IAAA,IAAAC,EAAAC,EAAAlC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,GAAA,QAAAG,EAAA7B,UAAA8B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAjC,UAAAiC,GAAA,OAAAL,EAAAlC,OAAAG,EAAA,EAAAH,CAAAE,MAAA+B,EAAAjC,OAAAI,EAAA,EAAAJ,CAAAgC,IAAAQ,KAAAnC,MAAA4B,EAAA,CAAA/B,MAAAuC,OAAAJ,MACEK,MAAQ,CAAEC,SAAU,MADtBT,EAAA,OAAAlC,OAAAO,EAAA,EAAAP,CAAAgC,EAAAjC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAgC,EAAA,EAAAvB,IAAA,UAAAC,MAAA,WAGI,OAAOR,KAAKgB,MAAM0B,KAAKC,IAAI,SAAUC,GACnC,OAAQnC,EAAAC,EAAAC,cAACkC,EAAD,CAAUtC,IAAKqC,EAAGhB,GAAIA,GAAIgB,EAAGhB,GAAIhB,KAAMgC,EAAGhB,GAAK,QAASC,MAAOe,EAAGzB,MAAON,QAAS,SAAUe,GAClG5B,KAAKgB,MAAM8B,SAASlB,IACpBV,KAAKlB,MAAOwB,OAAQxB,KAAKgB,MAAMyB,WAAaG,EAAGhB,MAEjDV,KAAKlB,SARX,CAAAO,IAAA,SAAAC,MAAA,WAWI,OAAQC,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,UACGX,KAAK+C,gBAbdjB,EAAA,CAAyBT,aCDZ2B,EAAb,SAAAnD,GAAA,SAAAmD,IAAA,OAAAlD,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,GAAAlD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAkD,EAAAnD,GAAAC,OAAAQ,EAAA,EAAAR,CAAAkD,EAAA,EAAAzC,IAAA,SAAAC,MAAA,WAEI,OAAQC,EAAAC,EAAAC,cAAA,eACNF,EAAAC,EAAAC,cAAA,UAAKX,KAAKgB,MAAM0B,KAAKvB,OACpBnB,KAAKgB,MAAM0B,KAAKO,UAJvBD,EAAA,CAAiC3B,oBCApB6B,EAAb,SAAArD,GAAA,SAAAqD,IAAA,IAAAnB,EAAAC,EAAAlC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,GAAA,QAAAjB,EAAA7B,UAAA8B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAjC,UAAAiC,GAAA,OAAAL,EAAAlC,OAAAG,EAAA,EAAAH,CAAAE,MAAA+B,EAAAjC,OAAAI,EAAA,EAAAJ,CAAAoD,IAAAZ,KAAAnC,MAAA4B,EAAA,CAAA/B,MAAAuC,OAAAJ,MACEK,MAAQ,CACNrB,MAAM,GACNgC,YAAY,IAHhBnB,EAAA,OAAAlC,OAAAO,EAAA,EAAAP,CAAAoD,EAAArD,GAAAC,OAAAQ,EAAA,EAAAR,CAAAoD,EAAA,EAAA3C,IAAA,oBAAAC,MAAA,SAKoB4C,GAChBpD,KAAKqD,SAALvD,OAAAwD,EAAA,EAAAxD,CAAA,GAAgBsD,EAAMG,OAAOC,KAAMJ,EAAMG,OAAO/C,UANpD,CAAAD,IAAA,gBAAAC,MAAA,SAQgB4C,GACZA,EAAMrC,iBACNf,KAAKgB,MAAMyC,SAASzD,KAAKwC,SAV7B,CAAAjC,IAAA,SAAAC,MAAA,WAaI,OAAQC,EAAAC,EAAAC,cAAA,eACNF,EAAAC,EAAAC,cAAA,QAAM8C,SAAUzD,KAAK0D,cAAcxC,KAAKlB,OACtCS,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAOH,KAAK,QAAQI,YAAY,QAAQC,SAAU7D,KAAK8D,kBAAkB5C,KAAKlB,MAAOQ,MAAOR,KAAKwC,MAAMrB,SAErHV,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,YAAU6C,KAAK,OAAOI,YAAY,cAAcC,SAAU7D,KAAK8D,kBAAkB5C,KAAKlB,SAExFS,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,kBAtBtBT,EAAA,CAAmC7B,aCAtB0C,EAAb,SAAAlE,GAAA,SAAAkE,IAAA,IAAAhC,EAAAC,EAAAlC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,GAAA,QAAA9B,EAAA7B,UAAA8B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAjC,UAAAiC,GAAA,OAAAL,EAAAlC,OAAAG,EAAA,EAAAH,CAAAE,MAAA+B,EAAAjC,OAAAI,EAAA,EAAAJ,CAAAiE,IAAAzB,KAAAnC,MAAA4B,EAAA,CAAA/B,MAAAuC,OAAAJ,MACEK,MAAQ,CACNrB,MAAMa,EAAKhB,MAAM0B,KAAKvB,MACtB8B,KAAKjB,EAAKhB,MAAM0B,KAAKO,MAHzBjB,EAAA,OAAAlC,OAAAO,EAAA,EAAAP,CAAAiE,EAAAlE,GAAAC,OAAAQ,EAAA,EAAAR,CAAAiE,EAAA,EAAAxD,IAAA,oBAAAC,MAAA,SAKoB4C,GAChBpD,KAAKqD,SAALvD,OAAAwD,EAAA,EAAAxD,CAAA,GAAgBsD,EAAMG,OAAOC,KAAMJ,EAAMG,OAAO/C,UANpD,CAAAD,IAAA,gBAAAC,MAAA,SAQgB4C,GACZA,EAAMrC,iBACNf,KAAKgB,MAAMyC,SAASzD,KAAKwC,SAV7B,CAAAjC,IAAA,SAAAC,MAAA,WAcI,OAAQC,EAAAC,EAAAC,cAAA,eACNF,EAAAC,EAAAC,cAAA,QAAM8C,SAAUzD,KAAK0D,cAAcxC,KAAKlB,OACtCS,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAOH,KAAK,QAAQI,YAAY,QAAQC,SAAU7D,KAAK8D,kBAAkB5C,KAAKlB,MAAOQ,MAAOR,KAAKwC,MAAMrB,SAErHV,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,YAAU6C,KAAK,OAAOI,YAAY,cAAcC,SAAU7D,KAAK8D,kBAAkB5C,KAAKlB,MAAOQ,MAAOR,KAAKwC,MAAMS,QAEjHxC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,kBAvBtBI,EAAA,CAAmC1C,aCM7B2C,6MACJC,gBAAkB,IAClBzB,MAAQ,CACN0B,KAAK,SACLC,QAAQ,CACNhD,MAAM,MACNC,IAAI,kBAENgD,QAAQ,CAACjD,MAAM,UAAW8B,KAAK,mBAC/BoB,qBAAqB,EACrBC,SAAS,CACP,CAAC1C,GAAG,EAAGT,MAAM,OAAQ8B,KAAK,oBAC1B,CAACrB,GAAG,EAAGT,MAAM,MAAO8B,KAAK,eACzB,CAACrB,GAAG,EAAGT,MAAM,aAAc8B,KAAK,kGAIlC,OAAuC,IAApCjD,KAAKwC,MAAM6B,qBACLrE,KAAKwC,MAAM4B,QAEbpE,KAAKwC,MAAM8B,SAASC,OAAO,SAAS3B,GACzC,GAAGA,EAAGhB,KAAO5B,KAAKwC,MAAM6B,qBACtB,OAAOzB,GAET1B,KAAKlB,OAAO,oCAGd,IAAIwE,EAyCJ,MAxCuB,SAApBxE,KAAKwC,MAAM0B,KACZM,EAAU/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAa/B,KAAM1C,KAAK0E,eACN,YAApB1E,KAAKwC,MAAM0B,KACnBM,EAAU/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAa/B,KAAM1C,KAAKwC,MAAM4B,UACZ,WAApBpE,KAAKwC,MAAM0B,KACnBM,EAAU/D,EAAAC,EAAAC,cAACgE,EAAD,CAAelB,SACvB,SAASmB,GACP,IAAIX,IAAoBjE,KAAKiE,gBACzBK,EAAWxE,OAAO+E,OAAO,GAAI7E,KAAKwC,MAAM8B,UAC5CA,EAASQ,KAAK,CACZlD,GAAGqC,EACH9C,MAAMyD,EAASzD,MACf8B,KAAK2B,EAAS3B,OAEhBjD,KAAKqD,SAAS,CACZiB,SAASA,EACTD,qBAAqBJ,EACrBC,KAAK,UAEPhD,KAAKlB,QAEmB,WAApBA,KAAKwC,MAAM0B,OACnBM,EAAU/D,EAAAC,EAAAC,cAACoE,EAAD,CACRrC,KAAM1C,KAAK0E,aACXjB,SACE,SAASmB,GACP,IAAII,EAAchF,KAAKwC,MAAM8B,SAAS3B,IAAI,SAASC,GACjD,OAAGA,EAAGhB,KAAO5B,KAAKwC,MAAM6B,qBACfvE,OAAO+E,OAAO,GAAIjC,EAAI,CAACzB,MAAMyD,EAASzD,MAAM8B,KAAK2B,EAAS3B,OAE1DL,GAET1B,KAAKlB,OACPA,KAAKqD,SAAS,CACZiB,SAASU,EACTd,KAAK,UAEThD,KAAKlB,SAITS,EAAAC,EAAAC,cAAA,OAAKsE,UAAU,OACbxE,EAAAC,EAAAC,cAACuE,EAAD,CAAS/D,MAAOnB,KAAKwC,MAAM2B,QAAQhD,MAAOC,IAAKpB,KAAKwC,MAAM2B,QAAQ/C,IAChEH,UAAW,WACTjB,KAAKqD,SAAS,CAACa,KAAK,UAAWG,qBAAqB,KACpDnD,KAAKlB,QAGTS,EAAAC,EAAAC,cAACwE,EAAD,CAAKrC,SAAU,SAASlB,GACtB5B,KAAKqD,SAAS,CAACgB,qBAAqBzC,EAAIsC,KAAK,UAC7ChD,KAAKlB,MAAO0C,KAAM1C,KAAKwC,MAAM8B,SAAU7B,SAAUzC,KAAKwC,MAAM6B,uBAE9D5D,EAAAC,EAAAC,cAACyE,EAAD,CAAMvB,SAAU,SAASK,GACX,WAATA,GACDlE,KAAKwC,MAAM8B,SAASC,OAAO,SAAS3B,GAClC,GAAG5C,KAAKwC,MAAM6B,uBAAyBzB,EAAGhB,GACxC,OAAOgB,GAET1B,KAAKlB,OACPA,KAAKqD,SAAS,CAACa,KAAK,UAAUG,qBAAqB,KAEnDrE,KAAKqD,SAAS,CAACa,KAAKA,KAEtBhD,KAAKlB,QAENwE,UA7FSnD,aAkGZgE,uLACSnB,EAAMpD,GACjBA,EAAGC,iBACHf,KAAKgB,MAAM6C,SAASK,oCAGpB,OACEzD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,UAAUC,QAASb,KAAKsF,aAAapE,KAAKlB,KAAK,WAAvD,UADF,KAEES,EAAAC,EAAAC,cAAA,KAAGC,KAAK,UAAUC,QAASb,KAAKsF,aAAapE,KAAKlB,KAAK,WAAvD,UAFF,KAGES,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,SAASnD,MAAM,SAASK,QAASb,KAAKsF,aAAapE,KAAKlB,KAAK,oBAV9DqB,aCvGJ2C,EDuHAA,EE7GKuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpF,EAAAC,EAAAC,cAACmF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.eb80708f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nexport class Subject extends Component {\r\n  render() {\r\n    return (<header>\r\n      <h1><a href=\"/\" onClick={function(ev){\r\n        ev.preventDefault();\r\n        this.props.onWelcome();\r\n      }.bind(this)}>{this.props.title}</a></h1>\r\n      {this.props.sub}\r\n    </header>);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nexport class ListLink extends Component {\r\n  render() {\r\n    var style = this.props.active ? { color: 'red', backgroundColor: 'blue', textDecoration: 'none' } : {};\r\n    return (<li><a href={this.props.href} style={style} onClick={function (id, ev) {\r\n      ev.preventDefault();\r\n      this.props.onClick(id);\r\n    }.bind(this, this.props.id)}>{this.props.label}</a></li>);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ListLink } from './ListLink';\r\nexport class TOC extends Component {\r\n  state = { selected: null };\r\n  getList() {\r\n    return this.props.data.map(function (el) {\r\n      return (<ListLink key={el.id} id={el.id} href={el.id + '.html'} label={el.title} onClick={function (id) {\r\n        this.props.onSelect(id);\r\n      }.bind(this)} active={this.props.selected === el.id}>\r\n      </ListLink>);\r\n    }.bind(this));\r\n  }\r\n  render() {\r\n    return (<nav>\r\n      <ol>\r\n        {this.getList()}\r\n      </ol>\r\n    </nav>);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nexport class ContentRead extends Component {\r\n  render() {\r\n    return (<article>\r\n      <h2>{this.props.data.title}</h2>\r\n      {this.props.data.desc}\r\n    </article>);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nexport class ContentCreate extends Component {\r\n  state = {\r\n    title:'',\r\n    description:''\r\n  }\r\n  formChangeHandler(event){\r\n    this.setState({[event.target.name]:event.target.value});\r\n  }\r\n  submitHandler(event){\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n  }\r\n  render() {\r\n    return (<article>\r\n      <form onSubmit={this.submitHandler.bind(this)}>\r\n        <p>\r\n          <input type=\"text\" name=\"title\" placeholder=\"title\" onChange={this.formChangeHandler.bind(this)} value={this.state.title}></input>\r\n        </p>\r\n        <p>\r\n          <textarea name=\"desc\" placeholder=\"description\" onChange={this.formChangeHandler.bind(this)} ></textarea>\r\n        </p>\r\n        <p>\r\n          <input type=\"submit\"></input>\r\n        </p>\r\n      </form>\r\n    </article>);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nexport class ContentUpdate extends Component {\r\n  state = {\r\n    title:this.props.data.title,\r\n    desc:this.props.data.desc\r\n  }\r\n  formChangeHandler(event){\r\n    this.setState({[event.target.name]:event.target.value});\r\n  }\r\n  submitHandler(event){\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n  }\r\n  render() {\r\n    \r\n    return (<article>\r\n      <form onSubmit={this.submitHandler.bind(this)}>\r\n        <p>\r\n          <input type=\"text\" name=\"title\" placeholder=\"title\" onChange={this.formChangeHandler.bind(this)} value={this.state.title}></input>\r\n        </p>\r\n        <p>\r\n          <textarea name=\"desc\" placeholder=\"description\" onChange={this.formChangeHandler.bind(this)} value={this.state.desc} ></textarea>\r\n        </p>\r\n        <p>\r\n          <input type=\"submit\"></input>\r\n        </p>\r\n      </form>\r\n    </article>);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Subject } from './components/Subject';\r\nimport { TOC } from './components/TOC';\r\nimport { ContentRead } from './components/ContentRead';\r\nimport { ContentCreate } from './components/ContentCreate';\r\nimport { ContentUpdate } from './components/ContentUpdate';\r\n\r\nclass App extends Component {\r\n  contents_max_id = 3;\r\n  state = {\r\n    mode:'update',\r\n    subject:{\r\n      title:'WEB',\r\n      sub:'World wide web'\r\n    },\r\n    welcome:{title:'Welcome', desc:'Hello, React.js'},\r\n    selected_contents_id:1,\r\n    contents:[\r\n      {id:1, title:'HTML', desc:'For information.'},\r\n      {id:2, title:'CSS', desc:'For design.'},\r\n      {id:3, title:'JavaScript', desc:'For interaction.'},\r\n    ]\r\n  }\r\n  getContent(){\r\n    if(this.state.selected_contents_id === 0){\r\n      return this.state.welcome;\r\n    }\r\n    return this.state.contents.filter(function(el){\r\n      if(el.id === this.state.selected_contents_id){\r\n        return el;\r\n      }\r\n    }.bind(this))[0];\r\n  }\r\n  render() {\r\n    var content;\r\n    if(this.state.mode === 'read'){\r\n      content = <ContentRead data={this.getContent()}></ContentRead>\r\n    } else if(this.state.mode === 'welcome'){\r\n      content = <ContentRead data={this.state.welcome}></ContentRead>\r\n    } else if(this.state.mode === 'create'){\r\n      content = <ContentCreate onSubmit={\r\n        function(formData){\r\n          var contents_max_id = ++this.contents_max_id;\r\n          var contents = Object.assign([], this.state.contents);\r\n          contents.push({\r\n            id:contents_max_id,\r\n            title:formData.title,\r\n            desc:formData.desc\r\n          });\r\n          this.setState({\r\n            contents:contents,\r\n            selected_contents_id:contents_max_id,\r\n            mode:'read'\r\n          });\r\n        }.bind(this)\r\n      }></ContentCreate>\r\n    } else if(this.state.mode === 'update'){\r\n      content = <ContentUpdate\r\n        data={this.getContent()}\r\n        onSubmit={\r\n          function(formData){\r\n            var newContents = this.state.contents.map(function(el){\r\n              if(el.id === this.state.selected_contents_id){\r\n                return Object.assign({}, el, {title:formData.title,desc:formData.desc});\r\n              } else{\r\n                return el;\r\n              }\r\n            }.bind(this))\r\n            this.setState({\r\n              contents:newContents,\r\n              mode:'read'\r\n            });\r\n        }.bind(this)\r\n      }></ContentUpdate>\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Subject title={this.state.subject.title} sub={this.state.subject.sub}\r\n          onWelcome={function(){\r\n            this.setState({mode:'welcome', selected_contents_id:0})\r\n          }.bind(this)}\r\n          ></Subject>\r\n\r\n        <TOC onSelect={function(id){\r\n          this.setState({selected_contents_id:id, mode:'read'});\r\n        }.bind(this)} data={this.state.contents} selected={this.state.selected_contents_id}></TOC>\r\n\r\n        <CRUD onChange={function(mode){\r\n          if(mode === 'delete'){\r\n            this.state.contents.filter(function(el){\r\n              if(this.state.selected_contents_id !== el.id){\r\n                return el;\r\n              }\r\n            }.bind(this));\r\n            this.setState({mode:'welcome',selected_contents_id:0})\r\n          } else {\r\n            this.setState({mode:mode});\r\n          }\r\n        }.bind(this)}></CRUD>\r\n\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass CRUD extends Component{\r\n  clickHandler(mode, ev){\r\n    ev.preventDefault();\r\n    this.props.onChange(mode);\r\n  }\r\n  render(){\r\n    return (\r\n      <div>\r\n        <a href=\"/create\" onClick={this.clickHandler.bind(this,'create')}>create</a> | \r\n        <a href=\"/update\" onClick={this.clickHandler.bind(this,'update')}>update</a> | \r\n        <input type=\"button\" value=\"delete\" onClick={this.clickHandler.bind(this,'delete')} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import App from \"./main\";\n// import App from \"./mutate\";\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}